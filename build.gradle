plugins {
    id "dev.architectury.loom" version "1.7-SNAPSHOT"
    id "maven-publish"
}

base {
    archivesName = project.archives_base_name
}

version = project.mod_version
group = project.maven_group

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

def generatedResources = file("src/generated")

sourceSets {
    main {
        resources.srcDir generatedResources
    }
}

loom {
    silentMojangMappingsLicense()

    forge {
        mixinConfigs = [
                "pocketrealms.mixins.json"
        ]
    }
}

loom {
    runs {
        data {
            data()
            programArgs "--all", "--mod", "pocketrealms"
            programArgs "--output", generatedResources.absolutePath
        }
    }
}

repositories {
    maven {
        url = "https://maven.tterrag.com/"
        content {
            includeGroup("com.tterrag.registrate")
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    forge "net.minecraftforge:forge:${project.forge_version}"
    mappings loom.officialMojangMappings()
    modImplementation "com.tterrag.registrate:Registrate:MC1.20-1.3.11"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}
